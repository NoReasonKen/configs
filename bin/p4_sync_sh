#!/u/chehuang/bin/bash

help="Usage: p4_sync_sh [<OPTION>...] [-- <P4_SYNC_OPTION>...] [-- <P4_RESOLVE_OPTION>...]
Call 'p4 sync' with additional custom processing
options:
    -q[q[q]], --quiet [LEVEL]   Disable outputs from 'p4 sync'
                                Number of 'q' is equivalent to LEVEL, LEVEL is default 1
                                LEVEL 1 disable common file sync message
                                LEVEL 2 disable 'must resolve' file sync message
                                LEVEL 3 disable all file sync message
                                ('-q'=='--quiet'=='--quiet 1', '-qq'=='--quiet 2', '-qqq'=='--quiet 3')
    --dry-run                   Only show the constructed command instead of running it
    -v, --verbose               Show verbose messages in console
    -h, --help                  Display this help and exit
    --                          Separator between custom_params, p4_sync_params, p4_resolve_params
"

source "/u/chehuang/bin/utils_src"
PATH=/u/chehuang/bin:$PATH

p4_sync_params=""
p4_resolve_params=""
verbose=false
quiet=0
dry_run=false

while [[ $# -gt 0 ]]; do
    case $1 in
        -q)
            quiet=1; shift
            ;;
        -qq)
            quiet=2; shift
            ;;
        -qqq)
            quiet=3; shift
            ;;
        --quiet)
            quiet=1; shift
            re='^[1-3]$'
            if [[ $1 =~ $re  ]] ; then
                quiet=$1; shift
            fi
            ;;
        --dry-run)
            dry_run=true
            shift
            ;;
        -v|--verbose)
            verbose=true
            shift
            ;;
        -h|--help)
            echo "$help"
            exit 0
            ;;
        --)
            shift
            break
            ;;
        *)
            utils::ERROR "Unknown parameter '$1'\n" >&2
            exit 1
            ;;
    esac
done

while [[ $# -gt 0 ]]; do
    case $1 in
        --)
            shift
            break
            ;;
        *)
            p4_sync_params+="$1 "
            shift
            ;;
    esac
done

while [[ $# -gt 0 ]]; do
    case $1 in
        *)
            p4_resolve_params+="$1 "
            shift
            ;;
    esac
done

utils::verbose -c "${CYAN}" "quiet=$quiet; dry-run=$dry_run; p4_sync_params=$p4_sync_params;" \
    "p4_resolve_params=$p4_resolve_params\n"

sync_cmd="p4 sync ${p4_sync_params} 2>&1"
sync_pipe_cmd=""
case $quiet in
    0)
        sync_pipe_part1="rg --color=always --passthru \"clobber\""
        sync_pipe_part2="rg --color=always --passthru \"must resolve\""
        sync_pipe_cmd="${sync_pipe_part1} | ${sync_pipe_part2}"
        ;;
    1)
        sync_pipe_part1="rg \"clobber|must resolve|File\(s\) up-to-date\.\""
        sync_pipe_part2="rg --passthru \"clobber|must resolve\""
        sync_pipe_cmd="${sync_pipe_part1} | ${sync_pipe_part2}"
        ;;
    2)
        sync_pipe_part1="rg \"clobber|File\(s\) up-to-date\.\""
        sync_pipe_part2="rg --passthru \"clobber\""
        sync_pipe_cmd="${sync_pipe_part1} | ${sync_pipe_part2}"
        ;;
    3)
        sync_cmd+=" > /dev/null"
        ;;
esac

resolve_cmd="p4 resolve -am ${p4_resolve_params} 2>&1"
resolve_pipe_cmd="rg --color=always --passthru \"resolve skipped\""

case $quiet in
    0|1|2)
        cmd="$sync_cmd | $sync_pipe_cmd; $resolve_cmd | $resolve_pipe_cmd"
        utils::verbose -c "${BGREEN}" -p "* " "cmd=$cmd\n"
        if [[ "$dry_run" == false ]]; then
            eval "$sync_cmd" | eval "$sync_pipe_cmd"
            [[ -z "${PIPESTATUS[0]}" || "${PIPESTATUS[0]}" == 1 ]] && exit 1
            eval "$resolve_cmd" | eval "$resolve_pipe_cmd"
            [[ -z "${PIPESTATUS[0]}" || "${PIPESTATUS[0]}" == 1 ]] && exit 1
        fi
        ;;
    3)
        cmd="$sync_cmd; $resolve_cmd | $resolve_pipe_cmd"
        utils::verbose -c "${BGREEN}" -p "* " "cmd=$cmd\n"
        if [[ "$dry_run" == false ]]; then
            eval "$sync_cmd"
            [[ -z "${PIPESTATUS[0]}" || "${PIPESTATUS[0]}" == 1 ]] && exit 1
            eval "$resolve_cmd" | eval "$resolve_pipe_cmd"
            [[ -z "${PIPESTATUS[0]}" || "${PIPESTATUS[0]}" == 1 ]] && exit 1
        fi
        ;;
esac

exit 0

